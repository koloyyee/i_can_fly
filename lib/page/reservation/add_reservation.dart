import 'package:flutter/material.dart';
import 'package:i_can_fly/dao/flight-dao.dart';
import 'package:i_can_fly/entity/flight.dart';

class AddReservationPage extends StatefulWidget {
  final FlightDao flightDao;

  AddReservationPage({Key? key, required this.flightDao}) : super(key: key);

  @override
  _AddReservationPageState createState() => _AddReservationPageState();
}

class _AddReservationPageState extends State<AddReservationPage> {
  final TextEditingController _departureCityController = TextEditingController();
  final TextEditingController _arrivalCityController = TextEditingController();
  final TextEditingController _airplaneTypeController = TextEditingController();
  DateTime? _departureDateTime;
  DateTime? _arrivalDateTime;

  void _addFlight() async {
    if (_departureCityController.text.isEmpty || _arrivalCityController.text.isEmpty) {
      // Optionally handle validation error, such as showing a Snackbar
      return;
    }

    final flight = Flight(
      id: null, // ID will be auto-generated by the database
      airplaneType: _airplaneTypeController.text,
      departureCity: _departureCityController.text,
      arrivalCity: _arrivalCityController.text,
      departureDateTime: _departureDateTime ?? DateTime.now(), // Consider using a DatePicker
      arrivalDateTime: _arrivalDateTime ?? DateTime.now().add(Duration(hours: 2)), // Consider using a DatePicker
    );

    await widget.flightDao.createFlight(flight);
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Add Flight Reservation"),
      ),
      body: SingleChildScrollView(
        child: Column(
          children: <Widget>[
            TextField(
              controller: _departureCityController,
              decoration: InputDecoration(labelText: 'Departure City'),
            ),
            TextField(
              controller: _arrivalCityController,
              decoration: InputDecoration(labelText: 'Arrival City'),
            ),
            TextField(
              controller: _airplaneTypeController,
              decoration: InputDecoration(labelText: 'Airplane Type'),
            ),
            // Example buttons for picking dates would go here
            ElevatedButton(
              onPressed: _addFlight,
              child: Text('Add Flight'),
            ),
          ],
        ),
      ),
    );
  }
}
